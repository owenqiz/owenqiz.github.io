<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on owenqi</title>
    <link>/tags/r/</link>
    <description>Recent content in R on owenqi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Plot Area Under the Curve with ggplot2</title>
      <link>/2019/03/05/plot-area-under-the-curve-with-ggplot2/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/05/plot-area-under-the-curve-with-ggplot2/</guid>
      <description>This is a very short post for a summary of the blog post, I will make a quick function for myself to graph some area under the curve for convenience.
In this post, I will only use standard normal (dnorm) (may update in the future). R script can be found from my GitHub
I will try to make customized function in the furture.
library(ggplot2)auc &amp;lt;- function(limit, lower.tail = TRUE, between = TRUE){bound &amp;lt;- c(-3.</description>
    </item>
    
    <item>
      <title>Simulation Study in R - in progress</title>
      <link>/2019/02/28/simulation-study-in-r/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/28/simulation-study-in-r/</guid>
      <description>This is a quick note for how to run some simulations in R, using the basic built-in function (or some package) is the easiest and obvious choice, using rstan for simple simulation is worthless but maybe useful when you need to simulate more complicated samples.
1. Using built-in function from R2. Using from Stan2.1 Using only rstan2.2 Using rstansim</description>
    </item>
    
  </channel>
</rss>